{
  "version": 1,
  "rules": [
    {
      "name": "Prevenir duplicación de archivos",
      "description": "Evitar la creación de archivos con funcionalidades que ya existen en app_launcher.py",
      "pattern": "^(app\\.py|run_app\\.py|standalone_app\\.py|actualizar_db\\.py|probar_app\\.py)$",
      "message": "⚠️ Este archivo duplica funcionalidad que ya existe en app_launcher.py. Considera usar app_launcher.py con los parámetros apropiados.",
      "severity": "warning"
    },
    {
      "name": "Principio de Responsabilidad Única (SRP)",
      "description": "Asegurar que cada archivo tiene una sola responsabilidad",
      "pattern": ".*\\.py$",
      "lineLimit": 300,
      "message": "⚠️ Este archivo excede 300 líneas. Considera dividirlo en módulos más pequeños con responsabilidades específicas.",
      "severity": "warning"
    },
    {
      "name": "Estructuras de datos limpias",
      "description": "Mantener modelos de datos separados de la lógica de aplicación",
      "pattern": "models\\.py$",
      "forbiddenPatterns": [
        "from flask import",
        "def [^_].*\\(",
        "@app\\.route",
        "if __name__ == '__main__'"
      ],
      "message": "⚠️ Los modelos de datos no deben contener lógica de aplicación o rutas (SRP).",
      "severity": "error"
    },
    {
      "name": "Separación de rutas y lógica de negocio",
      "description": "Asegurar que las rutas solo coordinan y no contienen lógica de negocio compleja",
      "pattern": "routes\\.py$",
      "complexityLimit": 15,
      "message": "⚠️ Las funciones de rutas tienen demasiada complejidad. Extrae la lógica de negocio a servicios separados.",
      "severity": "warning"
    },
    {
      "name": "Uso de interfaces abstractas",
      "description": "Promover la inversión de dependencias (DIP)",
      "pattern": "^(services|repositories)/.*\\.py$",
      "recommendedPatterns": [
        "from abc import ABC, abstractmethod",
        "class [A-Z].*Interface\\(ABC\\):"
      ],
      "message": "💡 Considera definir interfaces para este componente (Principio de Inversión de Dependencias).",
      "severity": "suggestion"
    },
    {
      "name": "Estructura de directorios",
      "description": "Mantener una estructura de directorios clara",
      "recommendedStructure": [
        "app_launcher.py",
        "config.py",
        "models.py",
        "routes.py",
        "templates/",
        "static/",
        "services/",
        "requirements.txt"
      ],
      "message": "💡 Mantén una estructura de proyecto clara y organizada.",
      "severity": "info"
    },
    {
      "name": "Archivos de configuración globales",
      "description": "Evitar múltiples archivos de configuración",
      "pattern": ".*config.*\\.py$",
      "exceptPattern": "^config\\.py$",
      "message": "⚠️ La configuración debe centralizarse en config.py.",
      "severity": "warning"
    },
    {
      "name": "Validación de nombres",
      "description": "Asegurar convenciones de nombres consistentes",
      "fileNamingConventions": {
        "services": "^[a-z_]+_service\\.py$",
        "repositories": "^[a-z_]+_repository\\.py$",
        "templates": "^[a-z_]+\\.html$"
      },
      "message": "⚠️ Nombre de archivo no sigue las convenciones establecidas.",
      "severity": "warning"
    },
    {
      "name": "Extensión de clases",
      "description": "Favorecer composición sobre herencia (Open-Closed Principle)",
      "pattern": ".*\\.py$",
      "warningPatterns": [
        "class [A-Za-z0-9_]+\\([^)]+, [^)]+\\):"
      ],
      "message": "⚠️ Considera usar composición en lugar de herencia múltiple.",
      "severity": "suggestion"
    },
    {
      "name": "Dependencias cíclicas",
      "description": "Evitar dependencias cíclicas entre módulos",
      "preventCircularDependencies": true,
      "message": "⚠️ Se detectó una dependencia circular. Considera restructurar tu código.",
      "severity": "error"
    }
  ],
  "bestPractices": {
    "python": {
      "useFunctionAnnotations": true,
      "useTypeHints": true,
      "maxFunctionLength": 50,
      "maxMethodsPerClass": 10
    },
    "html": {
      "validateAccessibility": true
    },
    "javascript": {
      "preferConst": true,
      "noVarUsage": true
    }
  }
} 